<?php

namespace app\index\controller;

use think\Controller;
use app\common\model\Address;
use app\common\model\Order as OrderModel;
class Order extends Commen {
    /*
    * 没有登录去登录
    */
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->goin();
    }
    /*
     * 下单页面
     */
    public function order(Address $address,OrderModel $order){
        if(request()->isPost()){
            $data=input('post.');
            //如果有地址编号就是编辑，没有就是添加地址
            if(isset($data['address_id'])){

                $res=$address->edit($data);
                if($res['valid']){
                    $this->redirect('index/order/order');
                }
            }else{
                if($data['address_tel']){
                    $res=$address->store($data);
                    if($res['valid']){
                        $this->redirect('index/order/order');
                    }
                }else{
                    $res=$order->store($data);
                }
            }
        }
        //地址
        $addressData=db('address')->where('address_uid',session('userid'))
            ->select();
        //$addressData=json_encode($addressData,JSON_UNESCAPED_SLASHES,JSON_UNESCAPED_UNICODE);
        //halt($addressData);
        //选择地址
        $addressCheck=db('address')->where('address_uid',session('userid'))
            ->where('check',1)->find();
        //订单
        $orderData=db('cart')->alias('c')->join('attr a','c.cart_attrid=a.attr_id')
            ->join('goods g','a.attr_gid=g.goods_id')
            ->where('cart_uid',session('userid'))
            ->where('cart_checked',1)->select();
        //$orderData=json_encode($orderData,JSON_UNESCAPED_UNICODE,JSON_UNESCAPED_SLASHES);
        //总价
        $totalPrice=0;
        foreach ($orderData as $k=>$v){
            //单个商品属性小计
            $orderData[$k]['subtotalprice']=$v['cart_attrnum']*$v['goods_price'];
            $totalPrice+= $orderData[$k]['subtotalprice'];
        }
       //halt($orderData);
        //halt($totalPrice);
        //网页头部标题
        $title='Knock--订单';
        return view('',compact('title','addressData','addressCheck','orderData','totalPrice'));
    }

    //选择地址
    public function check(Address $address){
        $res=$address->check($_GET);
        if($res){
            $this->redirect('index/order/order');
        }
    }

    /*
     * 新增地址
     */
    public function store(Address $address){
        $res=$address->store(input('post.'));
        if($res){
            $this->redirect('index/order/order');
        }

    }

    /*
     * 删除地址
     */
    public function del(){
        $id=input('get.address_id');
        //halt($id);
       if(Address::destroy($id)){
           $this->redirect('index/order/order');
       }
    }

    /*
     * 设置默认地址
     */
    public function setdefault(Address $address){
        $id=input('param.address_id');
        $res=$address->setdefault($id);
        if($res){
            $this->redirect('index/order/order');
        }
    }

    /*
     * 创建订单
     */
    public function create(OrderModel $order){
        $res=$order->store($_GET);
        if($res['valid']){
            //halt($res['id']);
            $this->redirect('index/pay/index',['order_id'=>$res['id']]);
        }
    }

    /*
     * 订单列表
     */
    public function lists(){
        //网页头部标题
        $title='Knock--订单列表';
        //获得该用户下的全部订单的数据
        $allOrder=db('order')->where('order_uid',session('userid'))
            ->order('order_createtime desc')->select();
        foreach($allOrder as $k=>$v){
            $allOrder[$k]['attr']=db('buy')->alias('b')
                ->join('attr a','b.buy_attrid=a.attr_id')
                ->join('goods g','g.goods_id=a.attr_gid')
                ->where('b.buy_oid',$v['order_id'])->select();
        }
        //halt($allOrder);
        //获得该用户下的所有未付款的订单
        $unpayOrder=db('order')->where('order_uid',session('userid'))
            ->where('order_pay',0)
            ->order('order_createtime desc')->select();
        foreach($unpayOrder as $k=>$v){
            $unpayOrder[$k]['attr']=db('buy')->alias('b')
                ->join('attr a','b.buy_attrid=a.attr_id')
                ->join('goods g','g.goods_id=a.attr_gid')
                ->where('b.buy_oid',$v['order_id'])->select();
        }
        //获得该用户下已经付款的订单
        $payOrder=db('order')->where('order_uid',session('userid'))
            ->where('order_pay',1)
            ->order('order_createtime desc')->select();
        foreach($payOrder as $k=>$v){
            $payOrder[$k]['attr']=db('buy')->alias('b')
                ->join('attr a','b.buy_attrid=a.attr_id')
                ->join('goods g','g.goods_id=a.attr_gid')
                ->where('b.buy_oid',$v['order_id'])->select();
        }
        return view('',compact('title','allOrder','unpayOrder','payOrder'));
    }

    /*
     * 删除订单，已经该订单下的商品属性
     */
    public function orderdel(){
        $id=input('get.order_id');
        //删除该订单下的商品属性
        db('buy')->where('buy_oid',$id)->delete();
        //删除改订单
        if(OrderModel::destroy($id)){
            $this->redirect('index/order/lists');
        }

    }

    /*
     * 订单详情
     */
    public function detail(){
        //网页头部标题
        $title='Knock--订单详情';
        //获得订单数据
        $id=input('param.order_id');
        $orderData=db('order')->alias('o')
            ->join('address ad','ad.address_id=o.order_aid')
            ->where('order_id',$id)->find();
        $orderData['buy']=db('buy')->alias('b')
            ->join('attr a','b.buy_attrid=a.attr_id')
            ->join('goods g','g.goods_id=a.attr_gid')
            ->where('buy_oid',$id)->select();
        foreach ($orderData['buy'] as $k=>$v){
            $orderData['buy'][$k]['subtotalprice']=0;
            $orderData['buy'][$k]['subtotalprice']+=$v['buy_attrnum']*$v['goods_price'];
        }
       // halt($orderData);
        return view('',compact('title','orderData'));
    }
}